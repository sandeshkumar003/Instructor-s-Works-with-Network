for (i in 1:100){
stripped=unlist(strsplit(json_data$response$results$webTitle[i], "[;,‘. :’–%0123456789]+"))
stemmed=stemDocument(stripped, language="english")
stopwords=c("", "d","|","s","T", "m","It", stopwords("english"))
clean_tweet = stemmed[!stemmed %in% stopwords]
clean_tweet=unlist(clean_tweet)
g1=g1+vertices(clean_tweet)
edges2=combn(clean_tweet,2)
g1=g1+edges(edges2)
}
plot(g1)
write.csv(get.edgelist(g1),"PakistanFloods.csv")
write.csv(get.edgelist(g1),"PakistanFloods.csv",na="",row.names =False,col.names = False)
write.csv(get.edgelist(g1),"PakistanFloods.csv",na="")
plot(g1)
write.csv(get.edgelist(g1),"PakistanFloods.csv",na="",row.names = False)
write.csv(get.edgelist(g1),"PakistanFloods.csv",na="",row.names = False)
write.csv(get.edgelist(g1),"PakistanFloods.csv",na="",row.names = FALSE)
write.csv(get.edgelist(g1),"PakistanFloods.csv",na="",row.names = FALSE)
write.csv(get.edgelist(g1),"PakistanFloods.csv",na="",row.names = FALSE, col.names = FALSE)
library(httr)
library(jsonlite)
baseurl = "http://content.guardianapis.com/search"
api_key= "91cd4377-f858-4470-bb76-24ad67e2a749"
query = "Pakistan Floods"
params = list("api-key" = api_key,
"page-size"=100,
"q"=query)
request = GET(baseurl, query=params)
json_data = fromJSON(content(request, as="text"))
View(json_data$response$results)
plot(table(json_data$response$results$sectionName))
library(tidyverse)
library(tm)
library(stringr)
library(SnowballC)
library(igraph)
listt=list()
g1=make_empty_graph()
for (i in 1:100){
stripped=unlist(strsplit(json_data$response$results$webTitle[i], "[;,‘. :’–]+"))
stemmed=stemDocument(stripped, language="english")
stopwords=c("", "d","|","Pakistan", "floods", "s", stopwords("SMART"))
clean_tweet = stemmed[!stemmed %in% stopwords]
clean_tweet=unlist(clean_tweet)
g1=g1+vertices(clean_tweet)
edges2=combn(clean_tweet,2)
g1=g1+edges(edges2)
}
g1=as.directed(g1)
plot(g1)
write.csv(get.edgelist(g1),"PakistanFloods.csv",na="",row.names = FALSE, col.names = FALSE)
library(tidyverse)
library(tm)
library(stringr)
library(SnowballC)
library(igraph)
listt=list()
g1=make_empty_graph()
for (i in 1:100){
stripped=unlist(strsplit(json_data$response$results$webTitle[i], "[;,‘. :’–%0123456789]+"))
stemmed=stemDocument(stripped, language="english")
stopwords=c("", "d","|","Pakistan", "floods", "s","m", stopwords("SMART"))
clean_tweet = stemmed[!stemmed %in% stopwords]
clean_tweet=unlist(clean_tweet)
g1=g1+vertices(clean_tweet)
edges2=combn(clean_tweet,2)
g1=g1+edges(edges2)
}
g1=as.directed(g1)
plot(g1)
write.csv(get.edgelist(g1),"PakistanFloods.csv",na="",row.names = FALSE, col.names = FALSE)
write.csv(get.edgelist(g1),"PakistanFloods.csv",na="",row.names = FALSE)
library(tidyverse)
library(tm)
library(stringr)
library(SnowballC)
library(igraph)
listt=list()
g1=make_empty_graph()
for (i in 1:100){
stripped=unlist(strsplit(json_data$response$results$webTitle[i], "[;,‘. :’–%0123456789]+"))
stemmed=stemDocument(stripped, language="english")
stopwords=c("", "d","|","Pakistan", "flood", "s","m", stopwords("SMART"))
clean_tweet = stemmed[!stemmed %in% stopwords]
clean_tweet=unlist(clean_tweet)
g1=g1+vertices(clean_tweet)
edges2=combn(clean_tweet,2)
g1=g1+edges(edges2)
}
g1=as.directed(g1)
plot(g1)
write.csv(get.edgelist(g1),"PakistanFloods.csv",na="",row.names = FALSE)
source("E:/Habib/Fall 2022/SNA/Project/CSVFileProcessingCode.R", echo=TRUE)
source("E:/Habib/Fall 2022/SNA/Project/CSVFileProcessingCode.R", echo=TRUE)
setwd("E:/Habib/Fall 2022/SNA/Project")
source("E:/Habib/Fall 2022/SNA/Project/CSVFileProcessingCode.R", echo=TRUE)
source("E:/Habib/Fall 2022/SNA/Project/CSVFileProcessingCode.R", echo=TRUE)
source("E:/Habib/Fall 2022/SNA/Project/CSVFileProcessingCode.R", echo=TRUE)
#Creating dataframe from CSV file of response
library(igraph)
readfile <- read.csv("Faculty Emails Data (Responses) - Form Responses.csv")
#checking teh dataframe
print(readfile)
#checking the length of rows in csv
print(length(readfile$Faculty))
#empty graph
facultygraph=make_empty_graph(directed=TRUE)
vertices=list()
#loop to add directed edges to a graph
for (i in 1:length(readfile$Faculty)){
if (readfile$Faculty[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Faculty[i])
vertices=append(vertices,readfile$Faculty[i])
}
if (readfile$Name1[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name1[i])
vertices=append(vertices,readfile$Name1[i])
}
if (readfile$Name2[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name2[i])
vertices=append(vertices,readfile$Name2[i])
} if (readfile$Name3[i] %in% vertices == FALSE){
#Creating dataframe from CSV file of response
library(igraph)
readfile <- read.csv("Faculty Emails Data (Responses) - Form Responses.csv")
#checking teh dataframe
print(readfile)
#checking the length of rows in csv
print(length(readfile$Faculty))
#empty graph
facultygraph=make_empty_graph(directed=TRUE)
vertices=list()
#loop to add directed edges to a graph
for (i in 1:length(readfile$Faculty)){
if (readfile$Faculty[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Faculty[i])
vertices=append(vertices,readfile$Faculty[i])
}
if (readfile$Name1[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name1[i])
vertices=append(vertices,readfile$Name1[i])
}
if (readfile$Name2[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name2[i])
vertices=append(vertices,readfile$Name2[i])
}
if (readfile$Name3[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name3[i])
vertices=append(vertices,readfile$Name3[i])
}
if (readfile$Name4[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name4[i])
vertices=append(vertices,readfile$Name4[i])
}
if (readfile$Name5[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name5[i])
vertices=append(vertices,readfile$Name5[i])
}
if (readfile$Name6[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name6[i])
vertices=append(vertices,readfile$Name6[i])
}
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name1[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name2[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name3[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name4[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name5[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name6[i]))
}
print(E(facultygraph))
plot(facultygraph)
g = facultygraph
ebc <- edge.betweenness.community(g, directed=T)
#Now we have the merges/splits and we need to calculate the modularity
#for each merge for this we'll use a function that for each edge
# removed will create a second graph, check for its membership and use
# that membership to calculate the modularity
mods <- sapply(0:ecount(g), function(i){
g2 <- delete.edges(g, ebc$removed.edges[seq(length=i)])
cl <- clusters(g2)$membership
# March 13, 2014 - compute modularity on the original graph g
# (Thank you to Augustin Luna for detecting this typo) and not on the induced one g2.
modularity(g,cl)
})
# we can now plot all modularities
plot(mods, pch=20)
# Now, let's color the nodes according to their membership
g2<-delete.edges(g, ebc$removed.edges[seq(length=which.max(mods)-1)])
V(g)$color=clusters(g2)$membership
# Let's choose a layout for the graph
g$layout <- layout.fruchterman.reingold
# plot it
plot(g, vertex.label=NA,margin=-0.4)
print(g)
# # Now, let's color the nodes according to their membership
# g2<-delete.edges(g, ebc$removed.edges[seq(length=which.max(mods)-1)])
# V(g)$color=clusters(g2)$membership
#
# # Let's choose a layout for the graph
# g$layout <- layout.fruchterman.reingold
#
# # plot it
# plot(g, vertex.label=NA,margin=-0.4)
#
print(V(g))
print(V(g))
# # Now, let's color the nodes according to their membership
# g2<-delete.edges(g, ebc$removed.edges[seq(length=which.max(mods)-1)])
# V(g)$color=clusters(g2)$membership
#
# # Let's choose a layout for the graph
# g$layout <- layout.fruchterman.reingold
#
# # plot it
# plot(g, vertex.label=NA,margin=-0.4)
#
print(V(g)$Name)
g <- make_ring(10) %>%
set_vertex_attr("label", value = LETTERS[1:10])
g
plot(g)
library(igraph)
readfile <- read.csv("Faculty Emails Data (Responses) - Form Responses.csv")
#checking teh dataframe
print(readfile)
#checking the length of rows in csv
print(length(readfile$Faculty))
#empty graph
facultygraph=make_empty_graph(directed=TRUE)
vertices=list()
#loop to add directed edges to a graph
for (i in 1:length(readfile$Faculty)){
if (readfile$Faculty[i] %in% vertices == FALSE){
#facultygraph=facultygraph+vertices(readfile$Faculty[i])
add_vertices(facultygraph,readfile$Faculty[i])
vertices=append(vertices,readfile$Faculty[i])
}
if (readfile$Name1[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name1[i])
vertices=append(vertices,readfile$Name1[i])
}
if (readfile$Name2[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name2[i])
vertices=append(vertices,readfile$Name2[i])
}
if (readfile$Name3[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name3[i])
vertices=append(vertices,readfile$Name3[i])
}
if (readfile$Name4[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name4[i])
vertices=append(vertices,readfile$Name4[i])
}
if (readfile$Name5[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name5[i])
vertices=append(vertices,readfile$Name5[i])
}
if (readfile$Name6[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name6[i])
vertices=append(vertices,readfile$Name6[i])
}
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name1[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name2[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name3[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name4[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name5[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name6[i]))
}
#Creating dataframe from CSV file of response
library(igraph)
readfile <- read.csv("Faculty Emails Data (Responses) - Form Responses.csv")
#checking teh dataframe
print(readfile)
#checking the length of rows in csv
print(length(readfile$Faculty))
#empty graph
facultygraph=make_empty_graph(directed=TRUE)
vertices=list()
#loop to add directed edges to a graph
for (i in 1:length(readfile$Faculty)){
if (readfile$Faculty[i] %in% vertices == FALSE){
#facultygraph=facultygraph+vertices(readfile$Faculty[i])
add_vertices(facultygraph,"label"=readfile$Faculty[i])
vertices=append(vertices,readfile$Faculty[i])
}
if (readfile$Name1[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name1[i])
vertices=append(vertices,readfile$Name1[i])
}
if (readfile$Name2[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name2[i])
vertices=append(vertices,readfile$Name2[i])
}
if (readfile$Name3[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name3[i])
vertices=append(vertices,readfile$Name3[i])
}
if (readfile$Name4[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name4[i])
vertices=append(vertices,readfile$Name4[i])
}
if (readfile$Name5[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name5[i])
vertices=append(vertices,readfile$Name5[i])
}
if (readfile$Name6[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name6[i])
vertices=append(vertices,readfile$Name6[i])
}
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name1[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name2[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name3[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name4[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name5[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name6[i]))
}
#Creating dataframe from CSV file of response
library(igraph)
readfile <- read.csv("Faculty Emails Data (Responses) - Form Responses.csv")
#checking teh dataframe
print(readfile)
#checking the length of rows in csv
print(length(readfile$Faculty))
#empty graph
facultygraph=make_empty_graph(directed=TRUE)
vertices=list()
#loop to add directed edges to a graph
for (i in 1:length(readfile$Faculty)){
if (readfile$Faculty[i] %in% vertices == FALSE){
#facultygraph=facultygraph+vertices(readfile$Faculty[i])
add_vertices(facultygraph,readfile$Sr.No,"label"=readfile$Faculty[i])
vertices=append(vertices,readfile$Faculty[i])
}
if (readfile$Name1[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name1[i])
vertices=append(vertices,readfile$Name1[i])
}
if (readfile$Name2[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name2[i])
vertices=append(vertices,readfile$Name2[i])
}
if (readfile$Name3[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name3[i])
vertices=append(vertices,readfile$Name3[i])
}
if (readfile$Name4[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name4[i])
vertices=append(vertices,readfile$Name4[i])
}
if (readfile$Name5[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name5[i])
vertices=append(vertices,readfile$Name5[i])
}
if (readfile$Name6[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name6[i])
vertices=append(vertices,readfile$Name6[i])
}
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name1[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name2[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name3[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name4[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name5[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name6[i]))
}
#Creating dataframe from CSV file of response
library(igraph)
readfile <- read.csv("Faculty Emails Data (Responses) - Form Responses.csv")
#checking teh dataframe
print(readfile)
#checking the length of rows in csv
print(length(readfile$Faculty))
#empty graph
facultygraph=make_empty_graph(directed=TRUE)
vertices=list()
#loop to add directed edges to a graph
for (i in 1:length(readfile$Faculty)){
if (readfile$Faculty[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Faculty[i],color="red")
vertices=append(vertices,readfile$Faculty[i])
}
if (readfile$Name1[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name1[i])
vertices=append(vertices,readfile$Name1[i])
}
if (readfile$Name2[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name2[i])
vertices=append(vertices,readfile$Name2[i])
}
if (readfile$Name3[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name3[i])
vertices=append(vertices,readfile$Name3[i])
}
if (readfile$Name4[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name4[i])
vertices=append(vertices,readfile$Name4[i])
}
if (readfile$Name5[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name5[i])
vertices=append(vertices,readfile$Name5[i])
}
if (readfile$Name6[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name6[i])
vertices=append(vertices,readfile$Name6[i])
}
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name1[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name2[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name3[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name4[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name5[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name6[i]))
}
print(E(facultygraph))
plot(facultygraph)
#Creating dataframe from CSV file of response
library(igraph)
readfile <- read.csv("Faculty Emails Data (Responses) - Form Responses.csv")
#checking teh dataframe
print(readfile)
#checking the length of rows in csv
print(length(readfile$Faculty))
#empty graph
facultygraph=make_empty_graph(directed=TRUE)
vertices=list()
#loop to add directed edges to a graph
for (i in 1:length(readfile$Faculty)){
if (readfile$Faculty[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Faculty[i],major="CS")
vertices=append(vertices,readfile$Faculty[i])
}
if (readfile$Name1[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name1[i])
vertices=append(vertices,readfile$Name1[i])
}
if (readfile$Name2[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name2[i])
vertices=append(vertices,readfile$Name2[i])
}
if (readfile$Name3[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name3[i])
vertices=append(vertices,readfile$Name3[i])
}
if (readfile$Name4[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name4[i])
vertices=append(vertices,readfile$Name4[i])
}
if (readfile$Name5[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name5[i])
vertices=append(vertices,readfile$Name5[i])
}
if (readfile$Name6[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name6[i])
vertices=append(vertices,readfile$Name6[i])
}
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name1[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name2[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name3[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name4[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name5[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name6[i]))
}
print(E(facultygraph))
plot(facultygraph)
#Creating dataframe from CSV file of response
library(igraph)
readfile <- read.csv("Faculty Emails Data (Responses) - Form Responses.csv")
#checking teh dataframe
print(readfile)
#checking the length of rows in csv
print(length(readfile$Faculty))
#empty graph
facultygraph=make_empty_graph(directed=TRUE)
vertices=list()
#loop to add directed edges to a graph
for (i in 1:length(readfile$Faculty)){
if (readfile$Faculty[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Faculty[i],School=readfile$School[i],Major=readfile$Major[i],Pod=readfile$Pod[i],posi=readfile$Role, Leadership=readfile$Leadership.Position[i])
vertices=append(vertices,readfile$Faculty[i])
}
if (readfile$Name1[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name1[i])
vertices=append(vertices,readfile$Name1[i])
}
if (readfile$Name2[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name2[i])
vertices=append(vertices,readfile$Name2[i])
}
if (readfile$Name3[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name3[i])
vertices=append(vertices,readfile$Name3[i])
}
if (readfile$Name4[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name4[i])
vertices=append(vertices,readfile$Name4[i])
}
if (readfile$Name5[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name5[i])
vertices=append(vertices,readfile$Name5[i])
}
if (readfile$Name6[i] %in% vertices == FALSE){
facultygraph=facultygraph+vertices(readfile$Name6[i])
vertices=append(vertices,readfile$Name6[i])
}
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name1[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name2[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name3[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name4[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name5[i]))
facultygraph=add_edges(facultygraph,c(readfile$Faculty[i],readfile$Name6[i]))
}
print(E(facultygraph))
plot(facultygraph)
